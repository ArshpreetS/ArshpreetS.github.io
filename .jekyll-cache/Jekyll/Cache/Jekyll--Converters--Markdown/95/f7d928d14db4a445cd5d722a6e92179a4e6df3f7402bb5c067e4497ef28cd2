I"6<p>So I recently found out the use of the <code class="language-plaintext highlighter-rouge">useRef() Hook</code></p>

<p>Basically it returns a single object with only one property called <em>current</em></p>

<pre><code class="language-Javascript">const countRender = useRef(0);
// countRender = { current: 0 }
</code></pre>

<h2 id="usecase">UseCase</h2>

<p>Every element in JSX has an attribute called <strong>ref</strong> through which we can pass our ‘Refs’.</p>

<pre><code class="language-Javascript">const messageWindow = useRef(null);

// Some code in middle

&lt;div ref={messageWindow} ...&gt;
// More code
</code></pre>

<p>Using the above syntax we can play with the <code class="language-plaintext highlighter-rouge">div</code> element itself as we will get the <em>element object</em> as the current value in our ref object.</p>

<pre><code class="language-Javascript">
useEffect(() =&gt; {
    messageWindow.current.scrollTop = 500px;
    // scrolls the div container by 500px
})
</code></pre>

<p>See you soon with more such learnings.</p>

<p>Peace!</p>
:ET